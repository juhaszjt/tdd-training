<?phpnamespace FraudSystem\Test\Homework04_2;use FraudSystem\Homework04_2\Captcha;class CaptchaTest extends \PHPUnit_Framework_TestCase{    private $captcha;    public function setUp()    {        $this->captcha = new Captcha();    }    public function tearDown()    {        unset($this->captcha);    }    public function testCaptchaStatusVariableExistsAndType()    {        $this->assertAttributeInternalType('boolean', 'captchaStatus', $this->captcha);    }    public function testCaptchaStatusVariableDefaultValue()    {        $this->assertEquals(false, $this->captcha->getCaptchaStatus());    }    public function testSetCaptchaStatusReturnValueTrue()    {        $this->captcha->setCaptchaStatus(true);        $this->assertEquals(true, $this->captcha->getCaptchaStatus());    }    public function testSetCaptchaStatusReturnValueFalse()    {        $this->captcha->setCaptchaStatus(false);        $this->assertEquals(false, $this->captcha->getCaptchaStatus());    }    /**     * @dataProvider invalidCaptchaStatusesDataProvider     * @expectedException \InvalidArgumentException     */    public function testSetCaptchaStatusWithInvalidValueThrowsException($invalidCaptchaStatus)    {        $this->captcha->setCaptchaStatus($invalidCaptchaStatus);    }        public function invalidCaptchaStatusesDataProvider()    {        return array(            array(new \stdClass()),            array('captcha'),            array('false'),            array(null),            array(array()),            array(-1)        );    }} 